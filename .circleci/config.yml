version: 2.1

orbs:
  windows: circleci/windows@5.0.0
  bats: circleci/bats@1.0.0

commands:
  setup:
    steps:
      - checkout
      - run:
          name: "Generate cache seed"
          command: |
            Get-ChildItem -Path $HOME\*.csproj -Recurse `
            | Sort-Object Name `
            | ForEach-Object { Get-Content $_ } `
            | Out-File -FilePath .\cache-seed -Append
      - restore_cache:
          keys:
            - dotnet-packages-v1-{{ checksum "cache-seed" }}
      - run:
          name: "Install project dependencies"
          command: dotnet.exe restore
      - save_cache:
          paths:
            - C:\Users\circleci\.nuget\packages
          key: dotnet-packages-v1-{{ checksum "cache-seed" }}

jobs:
  test:
    executor:
      name: windows/default
    steps:
      - setup
      - run:
          name: "Run tests"
          command: dotnet.exe test --no-restore
  package:
    executor:
      name: windows/default
    steps:
      - setup
      - run:
          name: "Create build directory"
          command: mkdir -p build
          shell: bash.exe
      - run:
          name: "Import GPG cert"
          command: echo $GPG_BASE64 | base64 --decode | gpg.exe --batch --no-tty --import --yes
          shell: bash.exe
      - run:
          name: "Decrypt SNK file"
          command: gpg.exe -d --pinentry-mode loopback --passphrase $GPG_PASSPHRASE -o Honeycomb.OpenTelemetry.snk Honeycomb.OpenTelemetry.snk.gpg
          shell: bash.exe
      - run:
          name: "Build release package"
          command: dotnet.exe pack -c release --output build --no-restore -p:signed=true
      - persist_to_workspace:
          root: \
          paths:
            - build\*
      - store_artifacts:
          path: build

  smoke_test:
    machine:
      image: ubuntu-2004:202107-02
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - bats/install
      - run:
          name: What's the BATS?
          command: |
            which bats
            bats --version
      - run:
          name: Smoke Test
          command: make smoke
      - store_test_results:
          path: ./smoke-tests/
      - store_artifacts:
          path: ./smoke-tests/report.xml
      - store_artifacts:
          path: ./smoke-tests/collector/data-results
      - run:
          name: Extinguish the flames
          command: make unsmoke

  publish_github:
    docker:
      - image: cibuilds/github:0.13.0
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: "Publishing Release on GitHub"
          command: ghr -draft -n ${CIRCLE_TAG} -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} build/

  publish_nuget:
    executor:
      name: windows/default
    steps:
      - attach_workspace:
          at: .\
      - run:
          name: "Publishing to nuget.org"
          command: dotnet.exe nuget push "build\*.nupkg" -k $env:NUGET_APIKEY -s https://api.nuget.org/v3/index.json

# Apply this filter to jobs that should always run.
filter_always: &filter_always
  filters:
    tags:
      only: /.*/

# Apply this filter to release-time jobs that should
# only run when a version tag (v1.2.3) is pushed.
filter_version_tag: &filter_version_tag
  filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/

# Apply this filter to jobs that require secrets, which
# are unavailable to PRs from forks and Dependabot.
filter_exclude_forks: &filter_exclude_forks
  filters:
    branches:
      ignore: /^(pull|dependabot)\/.*$/

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - test
      - smoke_test:
          requires:
            - test

  build:
    jobs:
      - test:
          <<: *filter_always
      - smoke_test:
          requires:
            - test
          <<: *filter_always
      - package:
          context: Honeycomb Secrets for Public Repos
          requires:
            - test
          <<: *filter_exclude_forks
      - publish_github:
          context: Honeycomb Secrets for Public Repos
          requires:
            - smoke_test
            - package
          <<: *filter_version_tag
      - publish_nuget:
          context: Honeycomb Secrets for Public Repos
          requires:
            - smoke_test
            - package
          <<: *filter_version_tag
